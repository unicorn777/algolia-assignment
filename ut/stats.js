/*
 * Testing stats
 */
const qyu = require('../qyu');

const q = qyu({
  rateLimit: 50, // maximum number of jobs being processed at the same time
  statsInterval: 3000 // When stat event is sent, in ms
});

q.on('done', function ( id, result ) {
 // console.log(`Job done ${id}`); // `id` is an internal identifier generated by `qyu`
});

q.on('all-done', function() {
  console.log('All jobs are done');
});

q.on('error', function ( id, error ) {
  console.log(`Job ${id} threw an error: ${error.message}`);
});

q.on('drain', function () {
  console.log('No more jobs to do');
});

q.on('stats', function ( nbJobsPerSecond ) {
  console.log(`${nbJobsPerSecond} jobs/s processed`)
});

(async () => {

  for  (var i = 0; i < 4; ++i) {
    q.push(job);
  }
  await q.start();
  await wait(5);
})();

// example job:

async function job() {
  await wait(2500);
  return {Hello: 'world!'} // That's the job `result`
}

function wait(ms) {
  return new Promise((resolve) => {
    return setTimeout(resolve, ms)
  });
}
